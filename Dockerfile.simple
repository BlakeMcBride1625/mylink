# Simple production Dockerfile - uses compiled backend
# Run these commands BEFORE building:
# 1. npm run build (frontend)
# 2. npm run build:backend (compiles to CommonJS)

FROM node:20-alpine
WORKDIR /app

# Copy package.json but create a production-friendly version
COPY package.json package-lock.json ./

# Temporarily remove "type": "module" for production (backend is CommonJS)
RUN sed -i '/"type": "module"/d' package.json

# Install production dependencies only
RUN npm ci --only=production --legacy-peer-deps && npm cache clean --force

# Copy built files
COPY dist ./dist
COPY server ./server
COPY public ./public

# Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001 && chown -R nodejs:nodejs /app
USER nodejs

# Expose ports
EXPOSE 1500 1600

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD node -e "require('http').get('http://localhost:${BACKEND_PORT:-1600}/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)}).on('error', () => process.exit(1))"

# Start backend (CommonJS)
CMD ["node", "server/index.js"]

